// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  username       String
  emailAddress   String        @unique
  password       String
  profilePicture String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Transcript     Transcript[]
  Performance    Performance[]
  Prediction     Prediction[]
}

model Transcript {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.ObjectId
  subject   String
  grade     Float
  semester  String
  createdAt DateTime
}

model Performance {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  User             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String   @db.ObjectId
  gpa              Float
  completedCredits Int?
  totalCredits     Int
  currentStatus    String
  updatedAt        DateTime @updatedAt
}

model Prediction {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  User             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String   @db.ObjectId
  predictedMark    Float
  suggestedCourses String[] @db.ObjectId
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
